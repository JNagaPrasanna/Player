{"ast":null,"code":"var _jsxFileName = \"D:\\\\HLS\\\\react-hls-player\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport './App.css';\nimport Hls from 'hls.js'; // var config = {\n//   fetchSetup: function (context, initParams) {\n//     // Always send cookies, even for cross-origin calls.\n//     initParams.credentials = 'include';\n//     return new Request(context.url, initParams);\n//   },\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar config = {\n  // autoStartLoad: true,\n  // maxBufferSize: 0,\n  // maxBufferLength:20,\n  // maxBufferHole:0.5,\n  // stretchShortVideoTrack:false,\n  // fragLoadingTimeOut: 20000,\n  // startFragPrefetch:true,\n  // enableIMSC1: false,\n  // lowLatencyMode: true,\n  // manifestLoadingTimeOut: 10000,\n  // maxAudioFramesDrift: 1,\n  // enableWebVTT: true,\n  // defaultAudioCodec: undefined,\n  // startPosition: 0,\n  // ignoreDevicePixelRatio:true,\n  // liveSyncDurationCount:3,\n  // levelLoadingTimeOut:1,\n  // enableCEA708Captions:true,\n  // enableIMSC1:true,\n  // debug: true,\n  // enableSoftwareAES: false,\n  // progressive: false,\n  maxLoadingDelay: 1\n};\nvar hls = new Hls(config); // var hls = new Hls();\n\nfunction App() {\n  _s();\n\n  useEffect(() => {\n    if (Hls.isSupported()) {\n      var video = document.getElementById('video');\n      console.log(video); // hls.autoStartLoad(10);\n\n      hls.attachMedia(video);\n      hls.on(Hls.Events.MEDIA_ATTACHED, function () {\n        console.log('video and hls.js are now bound together !');\n        hls.loadSource(\"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\");\n        hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {\n          console.log(\"MANIFEST_PARSED\");\n          console.log(\"data1\", data); // 'manifest loaded, found ' + data.levels.length + ' quality level'\n          // );\n          // if(data){\n          //   console.log(\"kanna\",data)\n          //   switch (data){\n          //     case \"hlsMediaAttached\":\n          //       console.log('  FRAG_LOAD_ERROR,Identifier for fragment load error');\n          //       hls.startLoad();\n          //       break;\n          //   }\n          // }\n        });\n      });\n      hls.on(Hls.Events.ERROR, function (event, data) {\n        // console.log(Hls.ErrorDetails,'ll')\n        if (data.fatal) {\n          console.log(data, 'data2');\n\n          switch (data.details) {\n            // case Hls.ErrorTypes.NETWORK_ERROR:\n            //   // try to recover network error\n            //   console.log('fatal network error encountered, try to recover');\n            //   hls.startLoad();\n            //   break;\n            case \"fragLoadError\":\n              console.log('  FRAG_LOAD_ERROR,Identifier for fragment load error');\n              hls.startLoad();\n              break;\n\n            case \"manifestLoadError\":\n              console.log(' MANIFEST_LOAD_ERROR,Identifier for a manifest load error');\n              hls.startLoad();\n              break;\n\n            case \"bufferAppendError\":\n              console.log(' BUFFER_APPEND_ERROR,Identifier for a buffer append error');\n              hls.startLoad();\n              break;\n\n            case \"bufferAppendingError\":\n              console.log('BUFFER_APPENDING_ERROR,Identifier for a buffer appending error');\n              hls.startLoad();\n              break;\n\n            case \"fragLoadTimeOut\":\n              console.log('  FRAG_LOAD_TIMEOUT, Identifier for a fragment TimeOut error event');\n              hls.startLoad();\n              break;\n\n            case \" manifestLoadTimeOut\":\n              console.log('  MANIFEST_LOAD_TIMEOUT,Identifier for a manifest load timeout');\n              hls.startLoad();\n              break;\n\n            case Hls.ErrorTypes.MEDIA_ERROR:\n              console.log('fatal media error encountered, try to recover');\n              hls.recoverMediaError();\n              break;\n\n            default:\n              // cannot recover\n              hls.destroy();\n              break;\n          }\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"video\", {\n      className: \"video\",\n      autoPlay: true,\n      controls: true,\n      id: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Hls","config","maxLoadingDelay","hls","App","isSupported","video","document","getElementById","console","log","attachMedia","on","Events","MEDIA_ATTACHED","loadSource","MANIFEST_PARSED","event","data","ERROR","fatal","details","startLoad","ErrorTypes","MEDIA_ERROR","recoverMediaError","destroy"],"sources":["D:/HLS/react-hls-player/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport './App.css';\nimport Hls from 'hls.js'\n\n// var config = {\n//   fetchSetup: function (context, initParams) {\n//     // Always send cookies, even for cross-origin calls.\n//     initParams.credentials = 'include';\n//     return new Request(context.url, initParams);\n//   },\n// };\n\nvar config = {\n  // autoStartLoad: true,\n  // maxBufferSize: 0,\n  // maxBufferLength:20,\n  // maxBufferHole:0.5,\n  // stretchShortVideoTrack:false,\n  // fragLoadingTimeOut: 20000,\n  // startFragPrefetch:true,\n  // enableIMSC1: false,\n  // lowLatencyMode: true,\n  // manifestLoadingTimeOut: 10000,\n  // maxAudioFramesDrift: 1,\n  // enableWebVTT: true,\n  // defaultAudioCodec: undefined,\n  // startPosition: 0,\n  // ignoreDevicePixelRatio:true,\n  // liveSyncDurationCount:3,\n  // levelLoadingTimeOut:1,\n  // enableCEA708Captions:true,\n  // enableIMSC1:true,\n  // debug: true,\n  // enableSoftwareAES: false,\n  // progressive: false,\n  maxLoadingDelay:1,\n\n \n  \n};\n var hls = new Hls(config);\n\n// var hls = new Hls();\n\nfunction App() {\n\n  \n  useEffect(() => {\n\n    if (Hls.isSupported()) {\n      var video = document.getElementById('video');\n      console.log(video)\n      // hls.autoStartLoad(10);\n    \n    hls.attachMedia(video);\n    hls.on(Hls.Events.MEDIA_ATTACHED, function () {\n      console.log('video and hls.js are now bound together !');\n      hls.loadSource( \"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\");\n\n\n      hls.on(Hls.Events.MANIFEST_PARSED, function (event, data) {\n        console.log(\"MANIFEST_PARSED\")\n        console.log(\"data1\",data);\n          // 'manifest loaded, found ' + data.levels.length + ' quality level'\n        // );\n        // if(data){\n        //   console.log(\"kanna\",data)\n        //   switch (data){\n            \n        //     case \"hlsMediaAttached\":\n        //       console.log('  FRAG_LOAD_ERROR,Identifier for fragment load error');\n        //       hls.startLoad();\n        //       break;\n        //   }\n        // }\n        \n      });\n      \n     \n    })\n    \n    hls.on(Hls.Events.ERROR, function (event, data) {\n      // console.log(Hls.ErrorDetails,'ll')\n      if (data.fatal) {\n        console.log(data,'data2')\n        switch (data.details) {\n          \n          // case Hls.ErrorTypes.NETWORK_ERROR:\n          //   // try to recover network error\n          //   console.log('fatal network error encountered, try to recover');\n          //   hls.startLoad();\n          //   break;\n           \n            case \"fragLoadError\":\n              console.log('  FRAG_LOAD_ERROR,Identifier for fragment load error');\n              hls.startLoad();\n              break;\n            case \"manifestLoadError\":\n              console.log(' MANIFEST_LOAD_ERROR,Identifier for a manifest load error');\n              hls.startLoad();\n              break;\n            case \"bufferAppendError\":\n              console.log(' BUFFER_APPEND_ERROR,Identifier for a buffer append error');\n              hls.startLoad();\n              break;\n            case \"bufferAppendingError\":\n              console.log('BUFFER_APPENDING_ERROR,Identifier for a buffer appending error');\n              hls.startLoad();\n              break;\n            case \"fragLoadTimeOut\":\n              console.log('  FRAG_LOAD_TIMEOUT, Identifier for a fragment TimeOut error event');\n              hls.startLoad();\n              break;\n            case \" manifestLoadTimeOut\":\n              console.log('  MANIFEST_LOAD_TIMEOUT,Identifier for a manifest load timeout');\n              hls.startLoad();\n              break;\n           \n            \n          case Hls.ErrorTypes.MEDIA_ERROR:\n            console.log('fatal media error encountered, try to recover');\n            hls.recoverMediaError();\n            break;\n          default:\n            // cannot recover\n            hls.destroy();\n            break;\n        }\n      }\n    });\n  }\n});\n  \n    \n\n\n  return (\n    \n    <div className=\"App\">\n     <video  className=\"video\" autoPlay   controls= {true} id=\"video\"></video>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}